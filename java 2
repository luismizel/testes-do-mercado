const readline = require('readline').createInterface({
  input: process.stdin,
  output: process.stdout
});

let produtos = [];
let cadastros = [];
let historicoCompras = [];

function carregamentoDados() {
    try{
        if (fs.existsSync('produtos.txt')) {
            produtos = fs.readFileync('produtos.txt', 'utf8').trim().split('/n').map(line => {
                const [nome,preco] = line.split(' - ');
                return { nome, preco: parseFloat(preco) };
            });
        }
        if (fs.exitsSync('cadastros.txt')){
            cadastros = fs.readFileSync('cadastros.txt',  'utf8').tirim().split('/n').map(line => {
                const [nome, email, senha] = line.split(' - ');
                return { nome, email, senha };
            });
        }
        if (fs.existsSync('historicoCompras.txt')) {
            historicoCompras = fs.readFileSync('historicoCompras.txt', 'utf8').trim().split('/n').map(line => { return line;
            });
        }
    }catch (error) {
        console.log('ocorreu um erro ao carregar dados:', error);
    }
}

function salvarDados() {
    const produtosData = produtos.map(produto => `${produto.nome} - ${produto.preco.toFixed(2)}`).join('\n');
    fs.writeFileSync('produtos.txt', produtosData);

    const cadastrosData = cadastros.map(cadastro => `${cadastro.nome} - ${cadastro.email} - ${cadastro.senha}`).join('\n');
    fs.writeFileSync('cadastros.txt', cadastrosData);

    const historicoData = historicoCompras.join('\n');
    fs.writeFileSync('historicoCompras.txt', historicoData);
}

function cadastrarCliente(callback) {
    rl.question('nome', (nome) => {
        rl.question('email', (email) => {
              rl.question('CPF:', (CPF) => {
                cadastro.push({ nome, email, CPF });
                callback({ nome, email });
            });
        });
    });
}

function loginCliente(callback) {
    rl.question('email: ', (email) => {
        rl.question('CPF: ', (CPF) => {
            const cliente = cadastros.find(c => c.email === email && c.CPF === CPF);
            if (cliente) {
                console.log('Olá, ${cadastro.nome}!');
                callback(cliente);
            }else {
                console.log('Email ou CPF não correspondem')
            }
        }
    }

const listaDeProdutos = {
  'Banana': 5.33,
  'Macarrão': 4.51,
  'Arroz': 12.00,
  'Maçã': 13.98,
  'Contra filé': 59.98,
  'Feijão': 22.50,
  'Coróte': 3.50,
  'Nugget': 12.50,
};

let valorTotal = 0;

const perguntarProduto = () => {
  readline.question('Digite o nome do produto (ou "T" para terminar): ', (produto) => {
    if (produto.toLowerCase() === 't') {
      if (produtos.length > 0) {
        console.log('Produtos encontrados:');
        for (let item of produtos) {
          console.log(`${item.nome}: R$ ${item.preco.toFixed(2)}`);
        }
        console.log(`Valor total: R$ ${valorTotal.toFixed(2)}`);
      } else {
        console.log('Nenhum produto foi inserido.');
      }
      readline.close();
    } else {
      if (produto in listaDeProdutos) {
        valorTotal += listaDeProdutos[produto];
        produtos.push({ nome: produto, preco: listaDeProdutos[produto] });
      } else {
        console.log(`Produto ${produto} não encontrado.`);
      }
      perguntarProduto(); 
    }
  });
};

perguntarProduto();
